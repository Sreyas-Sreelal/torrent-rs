use crate::state::StateType;

#[repr(C)]
#[derive(Copy, Clone)]
pub struct torrent_status {
    pub state: StateType,
    pub paused: ::std::os::raw::c_int,
    pub progress: f32,
    pub error: [::std::os::raw::c_char; 1024usize],
    pub next_announce: ::std::os::raw::c_int,
    pub announce_interval: ::std::os::raw::c_int,
    pub current_tracker: [::std::os::raw::c_char; 512usize],
    pub total_download: ::std::os::raw::c_longlong,
    pub total_upload: ::std::os::raw::c_longlong,
    pub total_payload_download: ::std::os::raw::c_longlong,
    pub total_payload_upload: ::std::os::raw::c_longlong,
    pub total_failed_bytes: ::std::os::raw::c_longlong,
    pub total_redundant_bytes: ::std::os::raw::c_longlong,
    pub download_rate: f32,
    pub upload_rate: f32,
    pub download_payload_rate: f32,
    pub upload_payload_rate: f32,
    pub num_seeds: ::std::os::raw::c_int,
    pub num_peers: ::std::os::raw::c_int,
    pub num_complete: ::std::os::raw::c_int,
    pub num_incomplete: ::std::os::raw::c_int,
    pub list_seeds: ::std::os::raw::c_int,
    pub list_peers: ::std::os::raw::c_int,
    pub connect_candidates: ::std::os::raw::c_int,
    pub num_pieces: ::std::os::raw::c_int,
    pub total_done: ::std::os::raw::c_longlong,
    pub total_wanted_done: ::std::os::raw::c_longlong,
    pub total_wanted: ::std::os::raw::c_longlong,
    pub distributed_copies: f32,
    pub block_size: ::std::os::raw::c_int,
    pub num_uploads: ::std::os::raw::c_int,
    pub num_connections: ::std::os::raw::c_int,
    pub uploads_limit: ::std::os::raw::c_int,
    pub connections_limit: ::std::os::raw::c_int,
    pub up_bandwidth_queue: ::std::os::raw::c_int,
    pub down_bandwidth_queue: ::std::os::raw::c_int,
    pub all_time_upload: ::std::os::raw::c_longlong,
    pub all_time_download: ::std::os::raw::c_longlong,
    pub active_time: ::std::os::raw::c_int,
    pub seeding_time: ::std::os::raw::c_int,
    pub seed_rank: ::std::os::raw::c_int,
    pub last_scrape: ::std::os::raw::c_int,
    pub has_incoming: ::std::os::raw::c_int,
    pub seed_mode: ::std::os::raw::c_int,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct session_status {
    pub has_incoming_connections: ::std::os::raw::c_int,
    pub upload_rate: f32,
    pub download_rate: f32,
    pub total_download: ::std::os::raw::c_longlong,
    pub total_upload: ::std::os::raw::c_longlong,
    pub payload_upload_rate: f32,
    pub payload_download_rate: f32,
    pub total_payload_download: ::std::os::raw::c_longlong,
    pub total_payload_upload: ::std::os::raw::c_longlong,
    pub ip_overhead_upload_rate: f32,
    pub ip_overhead_download_rate: f32,
    pub total_ip_overhead_download: ::std::os::raw::c_longlong,
    pub total_ip_overhead_upload: ::std::os::raw::c_longlong,
    pub dht_upload_rate: f32,
    pub dht_download_rate: f32,
    pub total_dht_download: ::std::os::raw::c_longlong,
    pub total_dht_upload: ::std::os::raw::c_longlong,
    pub tracker_upload_rate: f32,
    pub tracker_download_rate: f32,
    pub total_tracker_download: ::std::os::raw::c_longlong,
    pub total_tracker_upload: ::std::os::raw::c_longlong,
    pub total_redundant_bytes: ::std::os::raw::c_longlong,
    pub total_failed_bytes: ::std::os::raw::c_longlong,
    pub num_peers: ::std::os::raw::c_int,
    pub num_unchoked: ::std::os::raw::c_int,
    pub allowed_upload_slots: ::std::os::raw::c_int,
    pub up_bandwidth_queue: ::std::os::raw::c_int,
    pub down_bandwidth_queue: ::std::os::raw::c_int,
    pub up_bandwidth_bytes_queue: ::std::os::raw::c_int,
    pub down_bandwidth_bytes_queue: ::std::os::raw::c_int,
    pub optimistic_unchoke_counter: ::std::os::raw::c_int,
    pub unchoke_counter: ::std::os::raw::c_int,
    pub dht_nodes: ::std::os::raw::c_int,
    pub dht_node_cache: ::std::os::raw::c_int,
    pub dht_torrents: ::std::os::raw::c_int,
    pub dht_global_nodes: ::std::os::raw::c_longlong,
}
